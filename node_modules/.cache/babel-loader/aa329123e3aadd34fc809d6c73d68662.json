{"ast":null,"code":"var _jsxFileName = \"/Users/hirokisaito/sample/react-portfolio-site/src/components/Skills.jsx\",\n    _s = $RefreshSig$();\n\nimport Circle from 'react-circle';\nimport { useEffect, useReducer } from 'react';\nimport axios from 'axios';\nimport { skillReducer, initialState, actionTypes } from '../reducers/skillReducer';\nimport { requestStates } from '../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Skills = () => {\n  _s();\n\n  const [state, dispatch] = useReducer(skillReducer, initialState);\n  useEffect(() => {\n    dispatch({\n      type: actionTypes.fetch\n    });\n    axios.get('https://api.github.com/users/hiroki0404508/repos').then(response => {\n      const languageList = response.data.map(res => res.language);\n      const countedLanguageList = generateLanguageCountObj(languageList);\n      dispatch({\n        type: actionTypes.success,\n        payload: {\n          languageList: countedLanguageList\n        }\n      });\n    }).catch(() => {\n      dispatch({\n        type: actionTypes.error\n      });\n    });\n  }, []);\n\n  const generateLanguageCountObj = allLanguageList => {\n    const notNullLanguageList = allLanguageList.filter(language => language != null);\n    const uniqueLanguageList = [...new Set(notNullLanguageList)];\n    return uniqueLanguageList.map(item => {\n      return {\n        language: item,\n        count: allLanguageList.filter(language => language === item).length\n      };\n    });\n  };\n\n  const converseCountToPercentage = count => {\n    if (count > 10) {\n      return 100;\n    }\n\n    return count * 10;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"skills\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heading\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Skills\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"skills-container\",\n        children: [state.requestState === requestStates.loading && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"description\",\n          children: \"\\u53D6\\u5F97\\u4E2D\\u2026\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), state.requestState === requestStates.success && state.languageList.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"description\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: item.language\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Circle, {\n            animate: true,\n            progress: converseCountToPercentage(item.count)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)), state.requestState === requestStates.error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"description\",\n          children: \"\\u30A8\\u30E9\\u30FC\\u304C\\u767A\\u751F\\u3057\\u307E\\u3057\\u305F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Skills, \"hTS72lMpsW9KUG3jRXLwnKnr1CQ=\");\n\n_c = Skills;\n\nvar _c;\n\n$RefreshReg$(_c, \"Skills\");","map":{"version":3,"sources":["/Users/hirokisaito/sample/react-portfolio-site/src/components/Skills.jsx"],"names":["Circle","useEffect","useReducer","axios","skillReducer","initialState","actionTypes","requestStates","Skills","state","dispatch","type","fetch","get","then","response","languageList","data","map","res","language","countedLanguageList","generateLanguageCountObj","success","payload","catch","error","allLanguageList","notNullLanguageList","filter","uniqueLanguageList","Set","item","count","length","converseCountToPercentage","requestState","loading","index"],"mappings":"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","sourcesContent":["import Circle from 'react-circle';\nimport { useEffect, useReducer } from 'react';\nimport axios from 'axios';\nimport { skillReducer, initialState, actionTypes } from '../reducers/skillReducer';\nimport { requestStates } from '../constants';\n\nexport const Skills = () => {\n  const [ state, dispatch ] = useReducer (skillReducer, initialState);\n\n  useEffect(() => {\n    dispatch({ type: actionTypes.fetch });\n    axios.get ('https://api.github.com/users/hiroki0404508/repos')\n      .then((response) => {\n        const languageList = response.data.map(res => res.language);\n        const countedLanguageList = generateLanguageCountObj(languageList);\n        dispatch({ type: actionTypes.success, payload: { languageList: countedLanguageList } });\n      })\n      .catch(() => {\n        dispatch({ type: actionTypes.error });\n      });\n  }, []);\n\n  const generateLanguageCountObj = (allLanguageList) => {\n    const notNullLanguageList = allLanguageList.filter(language => language !=null);\n    const uniqueLanguageList = [...new Set(notNullLanguageList)];\n\n    return uniqueLanguageList.map(item =>{\n      return {\n        language: item,\n        count: allLanguageList.filter(language => language === item).length\n      }\n    });\n  };\n\n  const converseCountToPercentage = (count) => {\n    if (count> 10) { return 100; }\n    return count*10;\n  };\n\n  return (\n    <div id=\"skills\">\n      <div className=\"container\">\n        <div className=\"heading\">\n          <h2>Skills</h2>\n        </div>\n        <div className=\"skills-container\">\n          {\n            state.requestState === requestStates.loading && (\n              <p className='description'>取得中…</p>\n            )\n          }\n          {\n            state.requestState === requestStates.success && (\n              state.languageList.map((item, index) => (\n                <div key = {index}>\n                  <p className='description'><strong>{item.language}</strong></p>\n                  <Circle\n                    animate\n                    progress = {converseCountToPercentage(item.count)}\n                  />\n                </div>\n              ))\n            )\n          }\n          {\n            state.requestState === requestStates.error && (\n              <p className='description'>エラーが発生しました</p>\n            )\n          }\n        </div>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}